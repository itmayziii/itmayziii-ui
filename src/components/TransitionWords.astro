---
interface Props {
  as: 'div' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'
  words: string[]
  class: string[]
}
const { as: Element, words, class: className } = Astro.props<Props>
---

<itmayziii-titles data-js-words={words}>
  <Element
    class:list={['transition-opacity duration-3000 delay-100 ease-linear', className ]}
    data-js-transition-el
    style='opacity: 1;'
  >
    {words[0] ?? ''}
  </Element>
</itmayziii-titles>

<style>

</style>

<script>
  class ItmayziiiTitles extends HTMLElement {
    constructor() {
      super()

      this.words = this.dataset.jsWords.split(',')
      this.elementEl = this.querySelector('[data-js-transition-el]')
      this.position = 0
    }

    onTransitionEnd () {
      if (this.elementEl.style.opacity === '0') {
        this.position++
        if (this.words[this.position] === undefined) {
          this.position = 0
        }

        this.elementEl.textContent = this.words[this.position]
        this.elementEl.style.opacity = '1'
        return
      }

      this.elementEl.style.opacity = 0
    }

    connectedCallback () {
      setTimeout(() => {
        this.elementEl.style.opacity = '0'
      }, 3000)
      this.elementEl.addEventListener('transitionend', this.onTransitionEnd.bind(this))
    }

    disconnectedCallback() {
      this.elementEl.removeEventListener('transitionend', this.onTransitionEnd.bind(this))
    }
  }

  customElements.define('itmayziii-titles', ItmayziiiTitles)
</script>
