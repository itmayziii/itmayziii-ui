---
import Layout from '../layouts/Layout.astro'
import graphqlFetch from '../graphql-fetch'
import Headshot from '../components/headshot/Headshot.astro'
import TransitionWords from '../components/transition-words/TransitionWords.astro'
import homeQuery from '../queries/homeQuery'
import { absoluteUrl } from '../utilities'
import WhatIDoSection from '../components/WhatIDoSection.astro'
import UnderlineHeading from '../components/UnderlineHeading.astro'
import Skill from '../components/Skill.astro'

const response = await graphqlFetch(homeQuery, 'Home')
const { Headshots: headshots, UserInfo: userInfo, Home: home } = (await response.json()).data
const headshotUrl = headshots.docs[0].sizes.mobile.url
const headshotAlt = headshots.docs[0].alt
const titles = userInfo.titles.map(({ title }) => title)
---

<Layout title={`Home | ${userInfo.fullName}`} fullName={userInfo.fullName} socials={userInfo.socials}>
  <section class='text-white text-center md:flex md:text-left'>
    <div class='flex justify-center md:ml-8'>
      <Headshot class='mt-8 md:mt-12' url={`http://localhost:3000${headshotUrl}`} alt={headshotAlt}/>
    </div>
    <div class='mx-4 md:ml-12 md:max-w-sm'>
      <TransitionWords class='mt-4 text-sm text-gray-300' as='h4' words={titles}/>
      <h1 class='font-bold text-4xl mt-1'>
        {userInfo.fullName}
      </h1>
      <p class='text-left mt-6 hyphens-auto break-words mx-auto'>
        {userInfo.description}
      </p>
      <div class='flex flex-col items-center mt-6 md:flex-row'>
        <button type='button' class='rounded-full border border-primary px-6 py-2 bg-gray-800'>
          Download Resume
        </button>
        <a href={absoluteUrl('/contact', Astro.site)}
           class='mt-2 rounded-full border border-white px-6 py-2 bg-gray-800 md:ml-2 md:mt-0'>
          Contact
        </a>
      </div>
    </div>
  </section>
  <section class='text-white mt-16'>
    <UnderlineHeading as='h2' class='capitalize text-2xl'>
      {home.whatIDo.title}
    </UnderlineHeading>
    {home.whatIDo.sections.map((section, i) => (
      <WhatIDoSection section={section} class={i === 0 ? 'mt-4' : 'mt-6'}/>
    ))}
  </section>
  <section class='text-white mt-16'>
    <UnderlineHeading as='h2' class='capitalize text-2xl'>
      {home.skills.title}
    </UnderlineHeading>
    {home.skills.skills.map((skill) => (
      <Skill skill={skill} class='mt-4'/>
    ))}
  </section>
</Layout>

<style>

</style>
